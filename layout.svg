<?xml version="1.0" encoding="UTF-8"?>
<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 2700 950" width="2700" height="950">
  <defs>
    <style>
      .title { font: bold 24px sans-serif; fill: #333; text-anchor: middle; }
      .subtitle { font: bold 18px sans-serif; fill: #666; text-anchor: middle; }
      .ring-label { font: bold 14px sans-serif; fill: #666; text-anchor: middle; }
      .led-label { font: 10px monospace; fill: #333; text-anchor: middle; }
      .led-label-small { font: 8px monospace; fill: #333; text-anchor: middle; }
      .clock-ring { fill: none; stroke: #2ecc71; stroke-width: 3; }
      .eye-ring-4 { fill: none; stroke: #e74c3c; stroke-width: 2; }
      .eye-ring-3 { fill: none; stroke: #e67e22; stroke-width: 2; }
      .eye-ring-2 { fill: none; stroke: #f39c12; stroke-width: 2; }
      .eye-ring-1 { fill: none; stroke: #3498db; stroke-width: 2; }
      .eye-center { fill: #9b59b6; stroke: #8e44ad; stroke-width: 2; }
      .led-dot { fill: #34495e; }
      .direction-arrow { fill: none; stroke: #27ae60; stroke-width: 2; marker-end: url(#arrowgreen);
      }
      .direction-arrow-red { fill: none; stroke: #c0392b; stroke-width: 2; marker-end:
      url(#arrowred); }
      .info-text { font: 12px sans-serif; fill: #555; }
      .data-flow { fill: none; stroke: #3498db; stroke-width: 2; stroke-dasharray: 5,5; marker-end:
      url(#arrowblue); }
    </style>
    <marker id="arrowgreen" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto"
      markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#27ae60" />
    </marker>
    <marker id="arrowred" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto"
      markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#c0392b" />
    </marker>
    <marker id="arrowblue" markerWidth="10" markerHeight="10" refX="9" refY="3" orient="auto"
      markerUnits="strokeWidth">
      <path d="M0,0 L0,6 L9,3 z" fill="#3498db" />
    </marker>
  </defs>

  <!-- LEFT SIDE: RAW INDICES -->
  <g id="raw-indices">
    <text x="450" y="30" class="title">Raw LED Indices (Physical Wiring)</text>
    <text x="450" y="55" class="subtitle">Clock: 0-99 | Eye: 100-160 | Total: 161 LEDs</text>

    <!-- Clock Ring (100 LEDs, radius 350) -->
    <circle cx="450" cy="500" r="350" class="clock-ring" />
    <text x="450" y="140" class="ring-label">CLOCK (100 LEDs)</text>
    <text x="450" y="160" class="info-text">Raw 0 at 6 o'clock → Counter-clockwise</text>

    <!-- Direction arrow for clock (counter-clockwise from 6 o'clock) -->
    <path d="M 450 850 A 350 350 0 0 0 150 650" class="direction-arrow" />
    <text x="200" y="780" class="info-text" transform="rotate(-30 200 780)">CCW →</text>

    <!-- Clock LEDs -->
    <g id="clock-leds-raw"></g>

    <!-- Eye Ring 4 (24 LEDs, radius 250) -->
    <circle cx="450" cy="500" r="250" class="eye-ring-4" />
    <text x="450" y="245" class="ring-label">EYE_4 (24 LEDs)</text>
    <text x="450" y="265" class="info-text">Raw 100 at 6 o'clock → Clockwise</text>

    <!-- Eye Ring 3 (16 LEDs, radius 180) -->
    <circle cx="450" cy="500" r="180" class="eye-ring-3" />
    <text x="450" y="315" class="ring-label">EYE_3 (16)</text>

    <!-- Eye Ring 2 (12 LEDs, radius 120) -->
    <circle cx="450" cy="500" r="120" class="eye-ring-2" />
    <text x="450" y="375" class="ring-label">EYE_2 (12)</text>

    <!-- Eye Ring 1 (8 LEDs, radius 70) -->
    <circle cx="450" cy="500" r="70" class="eye-ring-1" />
    <text x="450" y="425" class="ring-label">EYE_1 (8)</text>

    <!-- Eye Center (1 LED) -->
    <circle cx="450" cy="500" r="8" class="eye-center" />
    <text x="450" y="505" class="led-label" style="fill: white;">160</text>

    <!-- Direction arrow for eye rings (clockwise from 6 o'clock) -->
    <path d="M 450 750 A 250 250 0 0 0 700 500" class="direction-arrow-red" />
    <text x="630" y="680" class="info-text" transform="rotate(30 630 680)">CW →</text>

    <!-- Data flow indicators -->
    <text x="450" y="890" class="info-text">ESP32 Data Out</text>
    <path d="M 450 870 L 450 855" class="data-flow" />
    <text x="465" y="855" class="info-text">Raw 0</text>
    <text x="710" y="505" class="info-text">Raw 100 →</text>
  </g>

  <!-- MIDDLE: LOGICAL INDICES (Per-Ring) -->
  <g id="logical-indices" transform="translate(900, 0)">
    <text x="450" y="30" class="title">Logical LED Indices (Per-Ring)</text>
    <text x="450" y="55" class="subtitle">Each ring: Logical 0 = 12 o'clock (top)</text>

    <!-- Clock Ring -->
    <circle cx="450" cy="500" r="350" class="clock-ring" />
    <text x="450" y="140" class="ring-label">CLOCK (100 LEDs)</text>
    <text x="450" y="160" class="info-text">Logical 0-99 at 12 o'clock</text>

    <!-- Eye Ring 4 -->
    <circle cx="450" cy="500" r="250" class="eye-ring-4" />
    <text x="450" y="245" class="ring-label">EYE_4 (24 LEDs)</text>
    <text x="450" y="265" class="info-text">Logical 0-23 at 12 o'clock</text>

    <!-- Eye Ring 3 -->
    <circle cx="450" cy="500" r="180" class="eye-ring-3" />
    <text x="450" y="315" class="ring-label">EYE_3 (0-15)</text>

    <!-- Eye Ring 2 -->
    <circle cx="450" cy="500" r="120" class="eye-ring-2" />
    <text x="450" y="375" class="ring-label">EYE_2 (0-11)</text>

    <!-- Eye Ring 1 -->
    <circle cx="450" cy="500" r="70" class="eye-ring-1" />
    <text x="450" y="425" class="ring-label">EYE_1 (0-7)</text>

    <!-- Eye Center -->
    <circle cx="450" cy="500" r="8" class="eye-center" />
    <text x="450" y="505" class="led-label" style="fill: white;">0</text>

    <!-- Logical LEDs -->
    <g id="clock-leds-logical"></g>
    <g id="eye-leds-logical"></g>
  </g>

  <!-- RIGHT SIDE: COMBINED LOGICAL INDICES -->
  <g id="combined-logical-indices" transform="translate(1800, 0)">
    <text x="450" y="30" class="title">Combined Logical Indices (Global)</text>
    <text x="450" y="55" class="subtitle">0-99: Clock | 100-160: Eye rings</text>

    <!-- Clock Ring -->
    <circle cx="450" cy="500" r="350" class="clock-ring" />
    <text x="450" y="140" class="ring-label">CLOCK</text>
    <text x="450" y="160" class="info-text">Global Logical 0-99</text>

    <!-- Eye Ring 4 -->
    <circle cx="450" cy="500" r="250" class="eye-ring-4" />
    <text x="450" y="245" class="ring-label">EYE_4</text>
    <text x="450" y="265" class="info-text">Global Logical 100-123</text>

    <!-- Eye Ring 3 -->
    <circle cx="450" cy="500" r="180" class="eye-ring-3" />
    <text x="450" y="315" class="ring-label">EYE_3 (124-139)</text>

    <!-- Eye Ring 2 -->
    <circle cx="450" cy="500" r="120" class="eye-ring-2" />
    <text x="450" y="375" class="ring-label">EYE_2 (140-151)</text>

    <!-- Eye Ring 1 -->
    <circle cx="450" cy="500" r="70" class="eye-ring-1" />
    <text x="450" y="425" class="ring-label">EYE_1 (152-159)</text>

    <!-- Eye Center -->
    <circle cx="450" cy="500" r="8" class="eye-center" />
    <text x="450" y="505" class="led-label" style="fill: white;">160</text>

    <!-- Combined Logical LEDs -->
    <g id="clock-leds-combined"></g>
    <g id="eye-leds-combined"></g>
  </g>

  <script type="application/ecmascript"><![CDATA[
    // Helper function to create LED dot and label
    function createLED(parent, cx, cy, x, y, labelText, radius, isSmall) {
      // LED dot
      const dot = document.createElementNS('http://www.w3.org/2000/svg', 'circle');
      dot.setAttribute('cx', x);
      dot.setAttribute('cy', y);
      dot.setAttribute('r', '3');
      dot.setAttribute('class', 'led-dot');
      parent.appendChild(dot);
      
      // Label
      const label = document.createElementNS('http://www.w3.org/2000/svg', 'text');
      const labelRadius = radius;
      const angle = Math.atan2(y - cy, x - cx);
      const labelX = cx + labelRadius * Math.cos(angle);
      const labelY = cy + labelRadius * Math.sin(angle);
      label.setAttribute('x', labelX);
      label.setAttribute('y', labelY);
      label.setAttribute('class', isSmall ? 'led-label-small' : 'led-label');
      label.textContent = labelText;
      parent.appendChild(label);
    }
    
    // ========== RAW INDICES (LEFT SIDE) ==========
    const rawGroup = document.getElementById('raw-indices');
    const cx = 450, cy = 500;
    
    // Clock LEDs - Raw indices (LED 0 at 6 o'clock = 90° in SVG, go counter-clockwise = decrease angle)
    const clockGroup = document.getElementById('clock-leds-raw');
    const clockRadius = 350;
    const numClockLeds = 100;
    
    for (let i = 0; i < numClockLeds; i++) {
      // LED 0 at 6 o'clock (90° in standard math/SVG coords where 0°=right, 90°=down)
      // Counter-clockwise means we SUBTRACT angle (going from 90° to 0° to 270° to 180°)
      const angle = (90 - (i * 360 / numClockLeds)) * Math.PI / 180;
      const x = cx + clockRadius * Math.cos(angle);
      const y = cy + clockRadius * Math.sin(angle);
      createLED(clockGroup, cx, cy, x, y, i, clockRadius + 20, true);
    }
    
    // Eye Ring 4 - Raw indices (LED 100 at 6 o'clock = 90°, go clockwise = add angle)
    const eye4Radius = 250;
    const numEye4Leds = 24;
    
    for (let i = 0; i < numEye4Leds; i++) {
      // LED 100 at 6 o'clock (90°), clockwise means we ADD angle
      const angle = (90 + (i * 360 / numEye4Leds)) * Math.PI / 180;
      const x = cx + eye4Radius * Math.cos(angle);
      const y = cy + eye4Radius * Math.sin(angle);
      const rawIndex = 100 + i;
      const labelRadius = eye4Radius + (i % 2 === 0 ? 15 : 25);
      createLED(rawGroup, cx, cy, x, y, rawIndex, labelRadius, true);
    }
    
    // Eye Ring 3 - Raw indices
    const eye3Radius = 180;
    const numEye3Leds = 16;
    
    for (let i = 0; i < numEye3Leds; i++) {
      const angle = (90 + (i * 360 / numEye3Leds)) * Math.PI / 180;
      const x = cx + eye3Radius * Math.cos(angle);
      const y = cy + eye3Radius * Math.sin(angle);
      const rawIndex = 124 + i;
      const labelRadius = eye3Radius + (i % 2 === 0 ? 12 : 22);
      createLED(rawGroup, cx, cy, x, y, rawIndex, labelRadius, true);
    }
    
    // Eye Ring 2 - Raw indices
    const eye2Radius = 120;
    const numEye2Leds = 12;
    
    for (let i = 0; i < numEye2Leds; i++) {
      const angle = (90 + (i * 360 / numEye2Leds)) * Math.PI / 180;
      const x = cx + eye2Radius * Math.cos(angle);
      const y = cy + eye2Radius * Math.sin(angle);
      const rawIndex = 140 + i;
      const labelRadius = eye2Radius + (i % 2 === 0 ? 12 : 22);
      createLED(rawGroup, cx, cy, x, y, rawIndex, labelRadius, true);
    }
    
    // Eye Ring 1 - Raw indices
    const eye1Radius = 70;
    const numEye1Leds = 8;
    
    for (let i = 0; i < numEye1Leds; i++) {
      const angle = (90 + (i * 360 / numEye1Leds)) * Math.PI / 180;
      const x = cx + eye1Radius * Math.cos(angle);
      const y = cy + eye1Radius * Math.sin(angle);
      const rawIndex = 152 + i;
      const labelRadius = eye1Radius + (i % 2 === 0 ? 12 : 22);
      createLED(rawGroup, cx, cy, x, y, rawIndex, labelRadius, true);
    }
    
    // ========== LOGICAL INDICES (RIGHT SIDE) ==========
    const logicalGroup = document.getElementById('logical-indices');
    const logicalCx = 450, logicalCy = 500;
    
    // Clock LEDs - Logical (0 at 12 o'clock = 270°, go clockwise visually = add angle)
    const clockLogicalGroup = document.getElementById('clock-leds-logical');
    
    for (let i = 0; i < numClockLeds; i++) {
      // Logical 0 at 12 o'clock (270° in SVG where 0°=right, 90°=down, 180°=left, 270°=up)
      const angle = (270 + (i * 360 / numClockLeds)) * Math.PI / 180;
      const x = logicalCx + clockRadius * Math.cos(angle);
      const y = logicalCy + clockRadius * Math.sin(angle);
      createLED(clockLogicalGroup, logicalCx, logicalCy, x, y, i, clockRadius + 20, true);
    }
    
    // Eye Ring 4 - Logical (0 at 12 o'clock = 270°, go clockwise visually = add angle)
    const eyeLogicalGroup = document.getElementById('eye-leds-logical');
    
    for (let i = 0; i < numEye4Leds; i++) {
      const angle = (270 + (i * 360 / numEye4Leds)) * Math.PI / 180;
      const x = logicalCx + eye4Radius * Math.cos(angle);
      const y = logicalCy + eye4Radius * Math.sin(angle);
      const labelRadius = eye4Radius + (i % 2 === 0 ? 15 : 25);
      createLED(eyeLogicalGroup, logicalCx, logicalCy, x, y, i, labelRadius, true);
    }
    
    // Eye Ring 3 - Logical
    for (let i = 0; i < numEye3Leds; i++) {
      const angle = (270 + (i * 360 / numEye3Leds)) * Math.PI / 180;
      const x = logicalCx + eye3Radius * Math.cos(angle);
      const y = logicalCy + eye3Radius * Math.sin(angle);
      const labelRadius = eye3Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeLogicalGroup, logicalCx, logicalCy, x, y, i, labelRadius, true);
    }
    
    // Eye Ring 2 - Logical
    for (let i = 0; i < numEye2Leds; i++) {
      const angle = (270 + (i * 360 / numEye2Leds)) * Math.PI / 180;
      const x = logicalCx + eye2Radius * Math.cos(angle);
      const y = logicalCy + eye2Radius * Math.sin(angle);
      const labelRadius = eye2Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeLogicalGroup, logicalCx, logicalCy, x, y, i, labelRadius, true);
    }
    
    // Eye Ring 1 - Logical
    for (let i = 0; i < numEye1Leds; i++) {
      const angle = (270 + (i * 360 / numEye1Leds)) * Math.PI / 180;
      const x = logicalCx + eye1Radius * Math.cos(angle);
      const y = logicalCy + eye1Radius * Math.sin(angle);
      const labelRadius = eye1Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeLogicalGroup, logicalCx, logicalCy, x, y, i, labelRadius, true);
    }
    
    // ========== COMBINED LOGICAL INDICES (RIGHT SIDE) ==========
    const combinedGroup = document.getElementById('combined-logical-indices');
    const combinedCx = 450, combinedCy = 500;
    
    // Clock LEDs - Combined (global logical 0-99)
    const clockCombinedGroup = document.getElementById('clock-leds-combined');
    
    for (let i = 0; i < numClockLeds; i++) {
      const angle = (270 + (i * 360 / numClockLeds)) * Math.PI / 180;
      const x = combinedCx + clockRadius * Math.cos(angle);
      const y = combinedCy + clockRadius * Math.sin(angle);
      createLED(clockCombinedGroup, combinedCx, combinedCy, x, y, i, clockRadius + 20, true);
    }
    
    // Eye Ring 4 - Combined (global logical 100-123)
    const eyeCombinedGroup = document.getElementById('eye-leds-combined');
    
    for (let i = 0; i < numEye4Leds; i++) {
      const angle = (270 + (i * 360 / numEye4Leds)) * Math.PI / 180;
      const x = combinedCx + eye4Radius * Math.cos(angle);
      const y = combinedCy + eye4Radius * Math.sin(angle);
      const globalIndex = 100 + i;
      const labelRadius = eye4Radius + (i % 2 === 0 ? 15 : 25);
      createLED(eyeCombinedGroup, combinedCx, combinedCy, x, y, globalIndex, labelRadius, true);
    }
    
    // Eye Ring 3 - Combined (global logical 124-139)
    for (let i = 0; i < numEye3Leds; i++) {
      const angle = (270 + (i * 360 / numEye3Leds)) * Math.PI / 180;
      const x = combinedCx + eye3Radius * Math.cos(angle);
      const y = combinedCy + eye3Radius * Math.sin(angle);
      const globalIndex = 124 + i;
      const labelRadius = eye3Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeCombinedGroup, combinedCx, combinedCy, x, y, globalIndex, labelRadius, true);
    }
    
    // Eye Ring 2 - Combined (global logical 140-151)
    for (let i = 0; i < numEye2Leds; i++) {
      const angle = (270 + (i * 360 / numEye2Leds)) * Math.PI / 180;
      const x = combinedCx + eye2Radius * Math.cos(angle);
      const y = combinedCy + eye2Radius * Math.sin(angle);
      const globalIndex = 140 + i;
      const labelRadius = eye2Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeCombinedGroup, combinedCx, combinedCy, x, y, globalIndex, labelRadius, true);
    }
    
    // Eye Ring 1 - Combined (global logical 152-159)
    for (let i = 0; i < numEye1Leds; i++) {
      const angle = (270 + (i * 360 / numEye1Leds)) * Math.PI / 180;
      const x = combinedCx + eye1Radius * Math.cos(angle);
      const y = combinedCy + eye1Radius * Math.sin(angle);
      const globalIndex = 152 + i;
      const labelRadius = eye1Radius + (i % 2 === 0 ? 12 : 22);
      createLED(eyeCombinedGroup, combinedCx, combinedCy, x, y, globalIndex, labelRadius, true);
    }
  ]]></script>
</svg>